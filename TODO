- move all constants in the contracts to a config file
- reorganise contracts into 'core' and 'periphery' (maybe even a separate 'features' as well)
- move Stablecoin choice to being a hparam instead of hardcoded to USDC
- could change dividends to be propto available reputation?
- need to be cautious with the reputation for value delta. a can send you $100 USD on rain, but then in cash ask for the 100 back. maybe only use promises.
- generalise offline token. more of a 'proof reputation is staked' token? maybe make a 1-1 exchange? then to stake, you buy this token with your reputation?
- add conditionaltransfer, conditionalpromise, ... to support options (these would make our system economically 'complete'?)
- generalise the offline token? Make it more of a 'proof reputation is staked' token? With say a 1-1 exchange? Then to stake, you buy this token with your reputation?
- Add conditionaltransfer, conditionalpromise, ... to support options (these would make our system economically 'complete'?)
- how are delayed bandits related to promises?
- move core code utils from py scripts into a python lib.
- should allow contracts to build on each other? if X then use contract A, if Y then use contract B? (this is control flow?!)
- support multi-party contracts!?